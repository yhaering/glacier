import type { ArrayExpression } from './ArrayExpression';
import type { ArrowFunctionExpression } from './ArrowFunctionExpression';
import type { AssignmentExpression } from './AssignmentExpression';
import type { AwaitExpression } from './AwaitExpression';
import type { BinaryExpression } from './BinaryExpression';
import type { CallExpression } from './CallExpression';
import type { ChainExpression } from './ChainExpression';
import type { ClassExpression } from './ClassExpression';
import type { ConditionalExpression } from './ConditionalExpression';
import type { FunctionExpression } from './FunctionExpression';
import type { Identifier } from './Identifier';
import type { ImportExpression } from './ImportExpression';
import type { Literal } from './Literal';
import type { LogicalExpression } from './LogicalExpression';
import type { MemberExpression } from './MemberExpression';
import type { MetaProperty } from './MetaProperty';
import type { NewExpression } from './NewExpression';
import type { ObjectExpression } from './ObjectExpression';
import type { SequenceExpression } from './SequenceExpression';
import type { TaggedTemplateExpression } from './TaggedTemplateExpression';
import type { TemplateLiteral } from './TemplateLiteral';
import type { ThisExpression } from './ThisExpression';
import type { UnaryExpression } from './UnaryExpression';
import type { UpdateExpression } from './UpdateExpression';
import type { YieldExpression } from './YieldExpression';
/* eslint-disable max-lines */
export interface ExpressionMap {
  ArrayExpression: ArrayExpression;
  ArrowFunctionExpression: ArrowFunctionExpression;
  AssignmentExpression: AssignmentExpression;
  AwaitExpression: AwaitExpression;
  BinaryExpression: BinaryExpression;
  CallExpression: CallExpression;
  ChainExpression: ChainExpression;
  ClassExpression: ClassExpression;
  ConditionalExpression: ConditionalExpression;
  FunctionExpression: FunctionExpression;
  Identifier: Identifier;
  ImportExpression: ImportExpression;
  Literal: Literal;
  LogicalExpression: LogicalExpression;
  MemberExpression: MemberExpression;
  MetaProperty: MetaProperty;
  NewExpression: NewExpression;
  ObjectExpression: ObjectExpression;
  SequenceExpression: SequenceExpression;
  TaggedTemplateExpression: TaggedTemplateExpression;
  TemplateLiteral: TemplateLiteral;
  ThisExpression: ThisExpression;
  UnaryExpression: UnaryExpression;
  UpdateExpression: UpdateExpression;
  YieldExpression: YieldExpression;
}
